schema {
  query: Query
  mutation: Mutation
}

type Query {
  tableList(input: TableListInput!): TableListPayload!
}

type Mutation {
  tableCreate(input: TableCreateInput!): TableCreatePayload!
}

input TableListInput {
  databaseName: String!
}

input TableCreateInput {
  tableName: String!
}

enum SecurityErrorCode {
  UNAUTHORIZED
}

type TableListPayload {
  data: [Table!]
  error: TableListPayloadError
}

type TableCreatePayload {
  data: Table
  error: TableCreatePayloadError
}

type Table {
  name: String!
  columns: [TableColumn!]!
}

type TableColumn {
  name: String!
  # column type
  kind: String!
}

type SecurityError {
  code: SecurityErrorCode!
  message: String!
}

union TableListPayloadError = SecurityError
union TableCreatePayloadError = SecurityError
